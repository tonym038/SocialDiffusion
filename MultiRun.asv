% close all
% clear variables

setup();
rng(1); % fixing seed for testing purposes

    %% Input Parameter
% Simulation Parameters
filename_input = 'MultiRun_Input.txt';
filename_output = 'MultiRun_Output.mat';

% Plot Parameters    
T_gif = T; %150;  % Time step to finish on for gif
filename_gif = ''; % '' to suppress gif creation. 'Example_NetSci_Explosive.gif';

    %% Model Run
SimRunner_par('Model2', filename_input, filename_output)    


    %% Post-Simulation Analysis
load(filename_output);

for i_case = 1:numel(summary)
    n = summary.inputs.n;
    x = summary.results.n;

    t_f = size(x,2); % in case simulation terminated early
    x_hat_colour = zeros(3,t_f,n); %First entry is colour, second is time step, third is person;
    
    x_avg = mean(x);
    fprintf('Complete adoption at t=%d\n', find(x_avg == 1,1));
    for t = 1:t_f
        for i = 1:n
            if x(i,t) == 1
                % Set the marker colours to red if action is 1
                x_hat_colour(:,t:t_f,i) = repmat([1 0 0]',1,t_f-t+1);
            else
                %Set the marker colour to blue if action is 0
                x_hat_colour(:,t:t_f,i) = repmat([0 0 1]',1,t_f-t+1);
            end                
        end
    end
    
    
        %% Plotting
    gph = graph(A-eye(size(A,1)));
    T_gif = min(T_gif, t_f); % in case simulation terminated early
        
    figure_set = findobj('type','figure');    
    fig1 = figure(1);
    if ~isempty(figure_set) && ismember(1, [figure_set.Number]) % if exists, no need to adjust size and position
        clf(fig1);    
    else
        set(fig1, 'Units', 'Normalized', 'OuterPosition', [0.1, 0.1, 0.7, 0.7]);
    end
    set(fig1, 'Renderer','painters','Color',[1 1 1])
    set(axes,'YColor','none','XColor','none')
    hold on
    
    sp1 = subplot(1,2,1);
    hold on;
    plot1 = plot(1,x_avg(1),'LineWidth',4,'Color','r');
    set(sp1,'YLim', [0 1],'XLim', [0 T_gif],'FontSize',24);
    xlabel('Time Step','FontSize',24)
    ylabel('Fraction Adopting Innovation')
    hold off;
    
    sp2 = subplot(1,2,2);
    hold on;
    plot2 = plot(gph,'LayOut','auto','NodeLabel',{});   %Displays public action
    plot2.MarkerSize = 25;
    plot2.EdgeAlpha = 0.05;
    highlight(plot2, 0+(1:n_e),'Marker','o'); % explorers
    highlight(plot2, n_e+(1:n_f),'Marker','^'); % non-explorers
    highlight(plot2, n_e+n_f+(1:n_z),'Marker','X'); % zealots
    set(sp2,'YColor','none','XColor','none')
    dim = [0.85 0.6 0.6 0.3];
    str = {'Time step',num2str(1)};
    zz = annotation('textbox',dim,'String',str,'FitBoxToText','on');
    set(zz,'EdgeColor',[1 1 1],'FontSize',24)
    subtitle('O: Explorer, \Delta: Non-explorer, X: Zealot')
    hold off;
    
    if ~isempty(filename_gif)
        mov.gif_length = T_gif/2;
        mov.fps = round(T_gif/mov.gif_length);
        M = getframe; % initialize object; will be overwritten in loop
    end
    
    for t = T_gif%1:t_finish
        fig1;
        set(plot1,'XData',1:t,'YData',x_avg(1:t))
        mk_colour_public = reshape(x_hat_colour(:,t,:),3,n)'; %This takes out the marker colours for n individuals at the i-th time step, with i-th row being the marker colour for individual i
        plot2.NodeColor = mk_colour_public;   %Update marker colour representing public opinion        
    
        str = {'Time step',num2str(t)};
        zz.String = str;
        drawnow
        
        if ~isempty(filename_gif)
            M(t)=getframe(fig1);   %Captures the figure as a movie frame
            
            %Turn movie frame into an image
            im = frame2im(M(t));
            [imind,cm] = rgb2ind(im,256);
            
            %Write to GIF File
            if t == 1
                imwrite(imind,cm,filename_gif,'gif', 'Loopcount',inf,'DelayTime',1/mov.fps);
            else
                imwrite(imind,cm,filename_gif,'gif','WriteMode','append','DelayTime',1/mov.fps);
            end
        end
    end

    pause();
end